(window["webpackJsonpreact-complete-guide"]=window["webpackJsonpreact-complete-guide"]||[]).push([[0],{22:function(e,t,n){e.exports=n(40)},33:function(e,t,n){},34:function(e,t,n){},40:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(20),l=n.n(o),i=n(44),s=(n(33),n(4)),c=n(5),u=n(8),m=n(6),d=n(9),p=n(42),h=n(45),f=n(21),g=n(43),v=n(14),y=(n(34),function(e){function t(){var e,n;Object(s.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(u.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={courseTitle:""},n}return Object(d.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){this.parseQueryParams()}},{key:"componentDidUpdate",value:function(){this.parseQueryParams()}},{key:"parseQueryParams",value:function(){console.log(this.props);var e=new URLSearchParams(this.props.location.search),t=!0,n=!1,a=void 0;try{for(var r,o=e.entries()[Symbol.iterator]();!(t=(r=o.next()).done);t=!0){var l=r.value;this.state.courseTitle!==l[1]&&this.setState({courseTitle:l[1]})}}catch(i){n=!0,a=i}finally{try{t||null==o.return||o.return()}finally{if(n)throw a}}}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("h1",null,this.state.courseTitle),r.a.createElement("p",null,"You selected the Course with ID: ",this.props.match.params.courseId))}}]),t}(a.Component)),E=function(e){function t(){var e,n;Object(s.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(u.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(r)))).state={courses:[{id:1,title:"Angular - The Complete Guide"},{id:2,title:"Vue - The Complete Guide"},{id:3,title:"PWA - The Complete Guide"}]},n}return Object(d.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e=this;return r.a.createElement("div",null,r.a.createElement("h1",null,"Amazing Udemy Courses"),r.a.createElement("section",{className:"Courses"},this.state.courses.map(function(t){return r.a.createElement(v.a,{key:t.id,to:{pathname:e.props.match.url+"/"+t.id,search:"?title="+t.title}},r.a.createElement("article",{className:"Course"},t.title))})),r.a.createElement(f.a,{path:this.props.match.url+"/:courseId",component:y}))}}]),t}(a.Component),w=function(e){function t(){return Object(s.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("h1",null,"The Users Page"))}}]),t}(a.Component),b=function(){return r.a.createElement("h1",{style:{textAlign:"center"}},"Page not found!")},k=function(e){function t(){return Object(s.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement("div",{className:"App"},r.a.createElement("ol",{style:{textAlign:"left"}},r.a.createElement("li",null,'Add Routes to load "Users" and "Courses" on different pages (by entering a URL, without NavLinks)'),r.a.createElement("li",null,'Add a simple navigation with two Navlinks => One leading to "Users", one leading to "Courses"'),r.a.createElement("li",null,'Make the courses in "Courses" clickable by adding a Navlink and load the "Course" component in the place of "Courses" (without passing any data for now)'),r.a.createElement("li",null,'Pass the course ID to the "Course" page and output it there'),r.a.createElement("li",null,'Pass the course title to the "Course" page - pass it as a param or score bonus points by passing it as query params (you need to manually parse them though!)'),r.a.createElement("li",null,'Load the "Course" component as a nested component of "Courses"'),r.a.createElement("li",null,"Add a 404 error page and render it for any unknown routes"),r.a.createElement("li",null,'Redirect requests to /all-courses to /courses (=> Your "Courses" page)')),r.a.createElement("nav",null,r.a.createElement("ul",{style:{listStyle:"none",margin:"auto",padding:"0"}},r.a.createElement("li",{style:{margin:"10px",display:"inline-block"}},r.a.createElement(p.a,{to:"/courses"},"Courses")),r.a.createElement("li",{style:{margin:"10px",display:"inline-block"}},r.a.createElement(p.a,{to:"/users"},"Users")))),r.a.createElement(h.a,null,r.a.createElement(f.a,{path:"/users",component:w}),r.a.createElement(f.a,{path:"/courses",component:E}),r.a.createElement(g.a,{from:"/all-courses",to:"/courses"}),r.a.createElement(f.a,{component:b})))}}]),t}(a.Component),C=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function j(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){"installed"===t.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}}).catch(function(e){console.error("Error during service worker registration:",e)})}l.a.render(r.a.createElement(i.a,null,r.a.createElement(k,null)),document.getElementById("root")),function(){if("serviceWorker"in navigator){if(new URL("/react_router",window.location).origin!==window.location.origin)return;window.addEventListener("load",function(){var e="".concat("/react_router","/service-worker.js");C?function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):j(e)}).catch(function(){console.log("No internet connection found. App is running in offline mode.")})}(e):j(e)})}}()}},[[22,1,2]]]);
//# sourceMappingURL=main.3a3e9bae.chunk.js.map